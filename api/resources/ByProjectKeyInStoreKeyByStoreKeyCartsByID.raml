#ByProjectKeyInStoreKeyByStoreKeyCartsByID

uriParameters:
  projectKey:
    type: string
  storeKey:
    type: string
  ID:
    type: string
get:
  (resourcePathUri): "{projectKey}/in-store/key={storeKey}/carts/{ID}"
  description: |-
    Returns a cart by its ID from a specific Store. The {storeKey} path parameter maps to a Store’s key.
    If the cart exists in the commercetools project but does not have the store field,
    or the store field references a different store, this method returns a ResourceNotFound error.
    The cart may not contain up-to-date prices, discounts etc.
    If you want to ensure they’re up-to-date, send an Update request with the Recalculate update action instead.
  queryParameters:
    expand:
      type: string
  responses:
    200:
      body:
        application/json:
          type: Cart
post:
  (resourcePathUri): "{projectKey}/in-store/key={storeKey}/carts/{ID}"
  description: |-
    Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store’s key.
    If the cart exists in the commercetools project but does not have the store field,
    or the store field references a different store, this method returns a ResourceNotFound error.
  queryParameters:
    expand:
      type: string
  body:
    application/json:
      type: CartUpdate
  responses:
    200:
      body:
        application/json:
          type: Cart
delete:
  (resourcePathUri): "{projectKey}/in-store/key={storeKey}/carts/{ID}"
  description: |-
    Delete Cart by ID
  queryParameters:
    dataErasure:
      type: boolean
    version:
      format: int64
      type: number
    expand:
      type: string
  responses:
    200:
      body:
        application/json:
          type: Cart